package com.previred.lost.periods.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.previred.lost.periods.domain.dto.PeriodDTO;
import com.previred.lost.periods.domain.entities.LostPeriods;
import com.previred.lost.periods.domain.entities.LostPeriodsResponse;
import com.previred.lost.periods.domain.entities.ResponseStatus;
import com.previred.lost.periods.domain.global.Constants;
import com.previred.lost.periods.services.GDDPeriodService;
import com.previred.lost.periods.services.LostPeriodsService;
import com.previred.lost.periods.services.impl.GDDPeriodServiceImpl;
import com.previred.lost.periods.services.impl.LostPeriodsServiceImpl;
import com.previred.lost.periods.utils.StringFormatUtils;

import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import lombok.extern.slf4j.Slf4j;

/**
 * Controller layer that defines all operations of Lost Periods REST API to
 * expose.
 * 
 * @author Carlos Izquierdo
 * @author izqunited@gmail.com
 * @see LostPeriodsServiceImpl
 * @see GDDPeriodServiceImpl
 */
@Slf4j
@RestController
@RequestMapping("/lost-periods/api/v1/")
public class LostPeriodsController {

    @Autowired
    private GDDPeriodService periodService;

    @Autowired
    private LostPeriodsService lostPeriodsService;

    /**
     * API operation of method type GET to call GDD Service and calculate lost
     * periods.
     * 
     * @return HTTP entity that will be convert into a JSON object.
     */
    @ApiOperation(value = "Calculates and list the lost periods between two dates", nickname = "lost-periods", notes = "", response = LostPeriodsResponse.class, tags = {
            "lost periods" })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Periods information and lost periods", response = LostPeriodsResponse.class) })
    @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE }, value = "/list")
    public ResponseEntity<LostPeriodsResponse> getLostPeriods() {
        HttpStatus httpStatus = null;
        ResponseStatus status = new ResponseStatus();
        status.setTimestamp(StringFormatUtils.getTodayISODate());

        LostPeriods lostPeriods = new LostPeriods();

        try {

            log.info("Controller call to GDD Period service");

            // Call to GDD Period service to get a random dataset.
            PeriodDTO periodDTO = periodService.getRandomPeriods();

            log.info("Controller call to Lost Period service");

            // Calculate lost periods for this random dataset generated by GDD service
            lostPeriods = lostPeriodsService.getLostPeriods(periodDTO);

            log.info(Constants.SERVICE_EXECUTED_SUCCESSFULLY_MESSAGE + ". Ending service execution...");

            httpStatus = HttpStatus.OK;
            status.setMessage(Constants.SERVICE_EXECUTED_SUCCESSFULLY_MESSAGE);
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            httpStatus = HttpStatus.INTERNAL_SERVER_ERROR;
            status.setMessage(e.getMessage());
        }

        LostPeriodsResponse response = new LostPeriodsResponse();
        response.setLostPeriods(lostPeriods);

        status.setCode(httpStatus.value());
        status.setType(httpStatus.name());
        response.setStatus(status);

        return new ResponseEntity<>(response, httpStatus);
    }
}
